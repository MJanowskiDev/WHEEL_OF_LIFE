{"version":3,"sources":["components/CircularSector/CircularSector.js","containers/CircleCanvas/CircleCanvas.js","App.js","index.js"],"names":["getGradeRadius","newGrade","radius","maxGrade","getGrade","v","distance","Math","sqrt","x","y","round","getMiddleAngle","startAngle","angleLength","getCategoryTextRotation","PI","getCategoryTextPosition","textOffset","middleAngle","cos","sin","getGradeTextPosition","newGradeRadius","grade","dir","coef","coefX","coefY","getBezierStart","getBezierMid","r","newRadius","getBezierEnd","CircularSector","color","dataLen","idx","category","useState","setNewGradeRadius","gradeHooveringRadius","setGradeHooveringRadius","setNewGrade","newGradeHoovering","setNewGradeHoovering","hoovering","setHoovering","props","useSpring","scale","position","onPointerMove","event","gradeHoovering","point","gradeRadiusHoovering","onClick","onPointerEnter","onPointerLeave","args","attach","opacity","mesh","QuadraticBezierLine","start","end","mid","lineWidth","dashed","Line","points","Text","rotation","data","CircleCanvas","gl","antialias","onCreated","toneMapping","THREE","setPixelRatio","window","devicePixelRatio","alpha","camera","fov","map","element","length","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8b3f29c6.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Circle, Text, QuadraticBezierLine, Line } from '@react-three/drei';\nimport { useSpring, a } from '@react-spring/three';\n\nconst getGradeRadius = (newGrade, radius, maxGrade) => {\n\tconst newGradeRadius = newGrade * radius / maxGrade;\n\treturn newGradeRadius;\n};\n\nconst getGrade = (v, radius, maxGrade) => {\n\tconst distance = Math.sqrt(v.x ** 2 + v.y ** 2);\n\tconst newGrade = Math.round(distance * maxGrade / radius);\n\treturn newGrade;\n};\n\nconst getMiddleAngle = (startAngle, angleLength) => {\n\treturn startAngle + angleLength / 2;\n};\n\nconst getCategoryTextRotation = (startAngle, angleLength) => {\n\tconst middleAngle = getMiddleAngle(startAngle, angleLength);\n\tconst dir = middleAngle > Math.PI ? 1 : -1;\n\treturn [ 0, 0, dir * Math.PI / 2 + startAngle + angleLength / 2 ];\n};\n\nconst getCategoryTextPosition = (radius, startAngle, angleLength, textOffset = 1.15) => {\n\tconst middleAngle = getMiddleAngle(startAngle, angleLength);\n\n\treturn [ textOffset * radius * Math.cos(middleAngle), textOffset * radius * Math.sin(middleAngle), 0 ];\n};\n\nconst getGradeTextPosition = (newGradeRadius, startAngle, angleLength, radius, grade) => {\n\tconst middleAngle = getMiddleAngle(startAngle, angleLength);\n\tconst dir = middleAngle > Math.PI ? 1 : -1;\n\tconst coef = grade >= 2 ? -radius * 0.1 : radius * 0.1;\n\tconst coefX = dir * coef * Math.cos(middleAngle);\n\tconst coefY = dir * coef * Math.sin(middleAngle);\n\treturn [\n\t\tnewGradeRadius * Math.cos(middleAngle) + dir * coefX,\n\t\tnewGradeRadius * Math.sin(middleAngle) + dir * coefY,\n\t\t0\n\t];\n};\n\nconst getBezierStart = (startAngle, angleLength, radius) => {\n\treturn [ radius * Math.cos(startAngle), radius * Math.sin(startAngle), 0 ];\n};\n\nconst getBezierMid = (startAngle, angleLength, radius) => {\n\tconst r = radius + radius * 0.01;\n\tconst middleAngle = getMiddleAngle(startAngle, angleLength);\n\tconst newRadius = 2 * r - r * Math.cos(angleLength / 2);\n\n\treturn [ newRadius * Math.cos(middleAngle), newRadius * Math.sin(middleAngle), 0 ];\n};\n\nconst getBezierEnd = (startAngle, angleLength, radius) => {\n\treturn [ radius * Math.cos(startAngle + angleLength), radius * Math.sin(startAngle + angleLength), 0 ];\n};\n\nconst CircularSector = ({ radius, color, maxGrade, dataLen, idx, grade, category }) => {\n\tconst segments = 100;\n\n\tconst [ newGradeRadius, setNewGradeRadius ] = useState(getGradeRadius(grade, radius, maxGrade));\n\tconst [ gradeHooveringRadius, setGradeHooveringRadius ] = useState(getGradeRadius(grade, radius, maxGrade));\n\n\tconst [ newGrade, setNewGrade ] = useState(grade);\n\tconst [ newGradeHoovering, setNewGradeHoovering ] = useState(grade);\n\n\tconst [ hoovering, setHoovering ] = useState(false);\n\n\tconst pointerMove = (event) => {\n\t\tconst gradeHoovering = getGrade(event.point, radius, maxGrade);\n\t\tconst gradeRadiusHoovering = getGradeRadius(gradeHoovering, radius, maxGrade);\n\t\tsetNewGradeHoovering(gradeHoovering);\n\t\tsetGradeHooveringRadius(gradeRadiusHoovering);\n\t\tsetHoovering(true);\n\t};\n\n\tconst pointerClick = (event) => {\n\t\tconst gradeHoovering = getGrade(event.point, radius, maxGrade);\n\t\tconst gradeHooveringRadius = getGradeRadius(gradeHoovering, radius, maxGrade);\n\t\tsetNewGradeRadius(gradeHooveringRadius);\n\t\tsetNewGrade(gradeHoovering);\n\t\tsetNewGradeHoovering(gradeHoovering);\n\t\tsetGradeHooveringRadius(gradeHooveringRadius);\n\t\tsetHoovering(false);\n\t};\n\n\tconst angleLength = 2 * Math.PI / dataLen;\n\tconst startAngle = angleLength * idx;\n\n\tconst props = useSpring({\n\t\tscale: hoovering\n\t\t\t? [ gradeHooveringRadius / radius, gradeHooveringRadius / radius, 1 ]\n\t\t\t: [ newGradeRadius / radius, newGradeRadius / radius, 1 ],\n\t\tposition: hoovering\n\t\t\t? getGradeTextPosition(gradeHooveringRadius, startAngle, angleLength, radius, newGradeHoovering)\n\t\t\t: getGradeTextPosition(newGradeRadius, startAngle, angleLength, radius, newGrade)\n\t});\n\n\treturn (\n\t\t<group>\n\t\t\t<mesh\n\t\t\t\tonPointerMove={pointerMove}\n\t\t\t\tonClick={pointerClick}\n\t\t\t\tonPointerEnter={() => {\n\t\t\t\t\tsetHoovering(true);\n\t\t\t\t}}\n\t\t\t\tonPointerLeave={() => {\n\t\t\t\t\tsetHoovering(false);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Circle args={[ radius, segments, startAngle, angleLength ]}>\n\t\t\t\t\t<meshBasicMaterial attach='material' color={color} opacity={0.6} />\n\t\t\t\t</Circle>\n\t\t\t</mesh>\n\n\t\t\t<a.mesh scale={props.scale}>\n\t\t\t\t<Circle args={[ radius, segments, startAngle, angleLength ]}>\n\t\t\t\t\t<meshBasicMaterial attach='material' color={color} />\n\t\t\t\t</Circle>\n\n\t\t\t\t<QuadraticBezierLine\n\t\t\t\t\tstart={getBezierStart(startAngle, angleLength, radius)} // Starting point\n\t\t\t\t\tend={getBezierEnd(startAngle, angleLength, radius)} // Ending point\n\t\t\t\t\tmid={getBezierMid(startAngle, angleLength, radius)} // Optional control point\n\t\t\t\t\tcolor='white' // Default\n\t\t\t\t\tlineWidth={1} // In pixels (default)\n\t\t\t\t\tdashed={false} // Default\n\t\t\t\t/>\n\t\t\t\t<Line\n\t\t\t\t\tpoints={[ [ 0, 0, 0 ], getBezierStart(startAngle, angleLength, radius) ]}\n\t\t\t\t\tlineWidth={1}\n\t\t\t\t\tcolor='white' // Default\n\t\t\t\t/>\n\n\t\t\t\t<Line\n\t\t\t\t\tpoints={[ [ 0, 0, 0 ], getBezierEnd(startAngle, angleLength, radius) ]}\n\t\t\t\t\tlineWidth={1}\n\t\t\t\t\tcolor='white' // Default\n\t\t\t\t/>\n\t\t\t</a.mesh>\n\n\t\t\t<a.mesh position={props.position}>\n\t\t\t\t<Text\n\t\t\t\t\trotation={getCategoryTextRotation(startAngle, angleLength)}\n\t\t\t\t\tcolor={!hoovering || newGradeHoovering === newGrade ? 'black' : 'white'}\n\t\t\t\t>\n\t\t\t\t\t{hoovering ? newGradeHoovering : newGrade}\n\t\t\t\t</Text>\n\t\t\t</a.mesh>\n\n\t\t\t<Text\n\t\t\t\tposition={getCategoryTextPosition(radius, startAngle, angleLength)}\n\t\t\t\trotation={getCategoryTextRotation(startAngle, angleLength)}\n\t\t\t\tcolor='black'\n\t\t\t>\n\t\t\t\t{category}\n\t\t\t</Text>\n\t\t</group>\n\t);\n};\n\nexport default CircularSector;\n","import React from 'react';\nimport { Canvas } from '@react-three/fiber';\n\nimport CircularSector from '../../components/CircularSector/CircularSector';\nimport * as THREE from 'three';\nconst mainCircleRadius = 1;\nconst maxGrade = 10;\n\nconst data = [\n\t{\n\t\tcategory: 'Carrer',\n\t\tgrade: '5',\n\t\tcolor: '#59F316'\n\t},\n\t{\n\t\tcategory: 'Environment',\n\t\tgrade: '8',\n\t\tcolor: '#EF767A'\n\t},\n\t{\n\t\tcategory: 'Life Purpose',\n\t\tgrade: '7',\n\t\tcolor: '#7D7ABC'\n\t},\n\t{\n\t\tcategory: 'Nutrition',\n\t\tgrade: '4',\n\t\tcolor: '#3a86ff'\n\t},\n\t{\n\t\tcategory: 'Self Esteem',\n\t\tgrade: '1',\n\t\tcolor: '#FFE347'\n\t}\n];\n\nexport const CircleCanvas = () => {\n\treturn (\n\t\t<Canvas\n\t\t\tgl={{ antialias: false }}\n\t\t\tonCreated={({ gl }) => {\n\t\t\t\tgl.toneMapping = THREE.NoToneMapping;\n\t\t\t\tgl.setPixelRatio(window.devicePixelRatio * 4);\n\t\t\t\tgl.alpha = true;\n\t\t\t\tgl.antialias = true;\n\t\t\t}}\n\t\t\tcamera={{ fov: 30 }}\n\t\t>\n\t\t\t{data.map((element, idx) => {\n\t\t\t\treturn (\n\t\t\t\t\t<CircularSector\n\t\t\t\t\t\tkey={`CircularSector${idx}`}\n\t\t\t\t\t\tidx={idx}\n\t\t\t\t\t\tradius={mainCircleRadius}\n\t\t\t\t\t\tgrade={element.grade}\n\t\t\t\t\t\tcolor={element.color}\n\t\t\t\t\t\tdataLen={data.length}\n\t\t\t\t\t\tmaxGrade={maxGrade}\n\t\t\t\t\t\tcategory={element.category}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t})}\n\t\t</Canvas>\n\t);\n};\n","import './App.css';\nimport { CircleCanvas } from './containers/CircleCanvas/CircleCanvas';\nfunction App() {\n  return (\n    <div className = 'App'>\n      <CircleCanvas />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}