{"version":3,"sources":["components/CircularSector/Background.js","components/CircularSector/utils.js","components/CircularSector/theme.js","components/CircularSector/Border.js","components/CircularSector/Sector.js","components/CircularSector/CircularSector.js","containers/CircleCanvas/CircleCanvas.js","App.js","index.js"],"names":["Background","args","color","opacity","attach","getGradeRadius","newGrade","radius","maxGrade","getGrade","v","distance","Math","sqrt","x","y","round","getMiddleAngle","startAngle","angleLength","getCategoryTextRotation","PI","getCategoryTextPosition","textOffset","middleAngle","cos","sin","getGradeTextPosition","newGradeRadius","grade","dir","coef","coefX","coefY","getBezierStart","getBezierMid","r","newRadius","getBezierEnd","getScale","act","max","colors","Border","lineWidth","QuadraticBezierLine","start","end","mid","Line","points","Sector","CircularSector","dataLen","idx","category","segments","useState","setNewGradeRadius","gradeHooveringRadius","setGradeHooveringRadius","setNewGrade","newGradeHoovering","setNewGradeHoovering","hoovering","setHoovering","props","useSpring","scale","position","onPointerMove","event","gradeHoovering","point","gradeRadiusHoovering","onClick","onPointerEnter","onPointerLeave","mesh","Text","rotation","CircleCanvas","data","mainCircleRadius","pixelRatio","setPixelRatio","useEffect","updatePixelRatio","pr","window","devicePixelRatio","matchMedia","addEventListener","once","style","width","height","userSelect","dpr","flat","onCreated","gl","antialias","camera","fov","map","element","length","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d2c2334c.chunk.js","sourcesContent":["import { Circle } from '@react-three/drei';\n\nconst Background = ({ args, color, opacity = 0.6 }) => {\n\treturn (\n\t\t<Circle args={args}>\n\t\t\t<meshBasicMaterial attach=\"material\" color={color} opacity={opacity} />\n\t\t</Circle>\n\t);\n};\n\nexport default Background;\n","export const getGradeRadius = (newGrade, radius, maxGrade) => {\n\tconst newGradeRadius = newGrade * radius / maxGrade;\n\treturn newGradeRadius;\n};\n\nexport const getGrade = (v, radius, maxGrade) => {\n\tconst distance = Math.sqrt(v.x ** 2 + v.y ** 2);\n\tconst newGrade = Math.round(distance * maxGrade / radius);\n\treturn newGrade;\n};\n\nexport const getMiddleAngle = (startAngle, angleLength) => {\n\treturn startAngle + angleLength / 2;\n};\n\nexport const getCategoryTextRotation = (startAngle, angleLength) => {\n\tconst middleAngle = getMiddleAngle(startAngle, angleLength);\n\tconst dir = middleAngle > Math.PI ? 1 : -1;\n\treturn [ 0, 0, dir * Math.PI / 2 + startAngle + angleLength / 2 ];\n};\n\nexport const getCategoryTextPosition = (radius, startAngle, angleLength, textOffset = 1.15) => {\n\tconst middleAngle = getMiddleAngle(startAngle, angleLength);\n\n\treturn [ textOffset * radius * Math.cos(middleAngle), textOffset * radius * Math.sin(middleAngle), 0 ];\n};\n\nexport const getGradeTextPosition = (newGradeRadius, startAngle, angleLength, radius, grade) => {\n\tconst middleAngle = getMiddleAngle(startAngle, angleLength);\n\tconst dir = middleAngle > Math.PI ? 1 : -1;\n\tconst coef = grade >= 2 ? -radius * 0.1 : radius * 0.1;\n\tconst coefX = dir * coef * Math.cos(middleAngle);\n\tconst coefY = dir * coef * Math.sin(middleAngle);\n\treturn [ newGradeRadius * Math.cos(middleAngle) + dir * coefX, newGradeRadius * Math.sin(middleAngle) + dir * coefY, 0 ];\n};\n\nexport const getBezierStart = (startAngle, angleLength, radius) => {\n\treturn [ radius * Math.cos(startAngle), radius * Math.sin(startAngle), 0 ];\n};\n\nexport const getBezierMid = (startAngle, angleLength, radius) => {\n\tconst r = radius + radius * 0.01;\n\tconst middleAngle = getMiddleAngle(startAngle, angleLength);\n\tconst newRadius = 2 * r - r * Math.cos(angleLength / 2);\n\n\treturn [ newRadius * Math.cos(middleAngle), newRadius * Math.sin(middleAngle), 0 ];\n};\n\nexport const getBezierEnd = (startAngle, angleLength, radius) => {\n\treturn [ radius * Math.cos(startAngle + angleLength), radius * Math.sin(startAngle + angleLength), 0 ];\n};\n\nexport const getScale = (act, max) => {\n\treturn act / max;\n};\n\nexport const arcSegments = 50;\n","export const colors = { active: 'white', default: 'black' };\n","import { QuadraticBezierLine, Line } from '@react-three/drei';\nimport { getBezierStart, getBezierEnd, getBezierMid } from './utils';\nimport { colors } from './theme';\n\nconst Border = ({ startAngle, angleLength, radius, color = colors.active, lineWidth = 1.5 }) => {\n\treturn (\n\t\t<mesh>\n\t\t\t<QuadraticBezierLine\n\t\t\t\tstart={getBezierStart(startAngle, angleLength, radius)}\n\t\t\t\tend={getBezierEnd(startAngle, angleLength, radius)}\n\t\t\t\tmid={getBezierMid(startAngle, angleLength, radius)}\n\t\t\t\tcolor={color}\n\t\t\t\tlineWidth={lineWidth}\n\t\t\t/>\n\n\t\t\t<Line points={[ [ 0, 0, 0 ], getBezierStart(startAngle, angleLength, radius) ]} lineWidth={lineWidth} color={color} />\n\n\t\t\t<Line points={[ [ 0, 0, 0 ], getBezierEnd(startAngle, angleLength, radius) ]} lineWidth={lineWidth} color={color} />\n\t\t</mesh>\n\t);\n};\n\nexport default Border;\n","import { Circle } from '@react-three/drei';\nconst Sector = ({ args, color, opacity = 1 }) => {\n\treturn (\n\t\t<Circle args={args} color={color} opacity={opacity}>\n\t\t\t<meshBasicMaterial attach=\"material\" color={color} />\n\t\t</Circle>\n\t);\n};\n\nexport default Sector;\n","import React, { useState } from 'react';\nimport { Text } from '@react-three/drei';\nimport { useSpring, a } from '@react-spring/three';\n\nimport Background from './Background';\nimport Border from './Border';\nimport Sector from './Sector';\n\nimport {\n\tgetGradeTextPosition,\n\tgetGradeRadius,\n\tgetGrade,\n\tgetCategoryTextRotation,\n\tgetCategoryTextPosition,\n\tgetScale,\n\tarcSegments\n} from './utils';\n\nimport { colors } from './theme';\n\nconst CircularSector = ({ radius, color, maxGrade, dataLen, idx, grade, category, segments = arcSegments }) => {\n\tconst [ newGradeRadius, setNewGradeRadius ] = useState(getGradeRadius(grade, radius, maxGrade));\n\tconst [ gradeHooveringRadius, setGradeHooveringRadius ] = useState(getGradeRadius(grade, radius, maxGrade));\n\n\tconst [ newGrade, setNewGrade ] = useState(grade);\n\tconst [ newGradeHoovering, setNewGradeHoovering ] = useState(grade);\n\n\tconst [ hoovering, setHoovering ] = useState(false);\n\n\tconst pointerMove = (event) => {\n\t\tconst gradeHoovering = getGrade(event.point, radius, maxGrade);\n\t\tconst gradeRadiusHoovering = getGradeRadius(gradeHoovering, radius, maxGrade);\n\t\tsetNewGradeHoovering(gradeHoovering);\n\t\tsetGradeHooveringRadius(gradeRadiusHoovering);\n\t\tsetHoovering(true);\n\t};\n\n\tconst pointerClick = (event) => {\n\t\tconst gradeHoovering = getGrade(event.point, radius, maxGrade);\n\t\tconst gradeHooveringRadius = getGradeRadius(gradeHoovering, radius, maxGrade);\n\t\tsetNewGradeRadius(gradeHooveringRadius);\n\t\tsetNewGrade(gradeHoovering);\n\t\tsetNewGradeHoovering(gradeHoovering);\n\t\tsetGradeHooveringRadius(gradeHooveringRadius);\n\t\tsetHoovering(false);\n\t};\n\n\tconst pointerEnterHandle = () => {\n\t\tsetHoovering(true);\n\t};\n\n\tconst pointerLeaveHandle = () => {\n\t\tsetHoovering(false);\n\t};\n\n\tconst angleLength = 2 * Math.PI / dataLen;\n\tconst startAngle = angleLength * idx;\n\n\tconst props = useSpring({\n\t\tscale: hoovering\n\t\t\t? [ getScale(gradeHooveringRadius, radius), getScale(gradeHooveringRadius, radius), 1 ]\n\t\t\t: [ newGradeRadius / radius, newGradeRadius / radius, 1 ],\n\t\tposition: hoovering\n\t\t\t? getGradeTextPosition(gradeHooveringRadius, startAngle, angleLength, radius, newGradeHoovering)\n\t\t\t: getGradeTextPosition(newGradeRadius, startAngle, angleLength, radius, newGrade)\n\t});\n\n\treturn (\n\t\t<group>\n\t\t\t<mesh\n\t\t\t\tonPointerMove={pointerMove}\n\t\t\t\tonClick={pointerClick}\n\t\t\t\tonPointerEnter={pointerEnterHandle}\n\t\t\t\tonPointerLeave={pointerLeaveHandle}\n\t\t\t>\n\t\t\t\t<Background color={color} opacity={0.6} args={[ radius, segments, startAngle, angleLength ]} />\n\t\t\t</mesh>\n\n\t\t\t<a.mesh scale={props.scale}>\n\t\t\t\t<Sector args={[ radius, segments, startAngle, angleLength ]} color={color} opacity={1} />\n\t\t\t\t<Border startAngle={startAngle} angleLength={angleLength} radius={radius} />\n\t\t\t</a.mesh>\n\n\t\t\t<a.mesh position={props.position}>\n\t\t\t\t<Text\n\t\t\t\t\trotation={getCategoryTextRotation(startAngle, angleLength)}\n\t\t\t\t\tcolor={!hoovering || newGradeHoovering === newGrade ? colors.default : colors.active}\n\t\t\t\t>\n\t\t\t\t\t{hoovering ? newGradeHoovering : newGrade}\n\t\t\t\t</Text>\n\t\t\t</a.mesh>\n\n\t\t\t<Text\n\t\t\t\tposition={getCategoryTextPosition(radius, startAngle, angleLength)}\n\t\t\t\trotation={getCategoryTextRotation(startAngle, angleLength)}\n\t\t\t\tcolor={colors.default}\n\t\t\t>\n\t\t\t\t{category}\n\t\t\t</Text>\n\t\t</group>\n\t);\n};\n\nexport default CircularSector;\n","import { Canvas } from '@react-three/fiber';\nimport { useEffect, useState } from 'react';\nimport CircularSector from 'components/CircularSector';\n\nconst CircleCanvas = ({ data, mainCircleRadius = 1, maxGrade = 10 }) => {\n\tconst [ pixelRatio, setPixelRatio ] = useState(1);\n\n\tuseEffect(() => {\n\t\tconst updatePixelRatio = () => {\n\t\t\tlet pr = window.devicePixelRatio;\n\t\t\tmatchMedia(`(resolution: ${pr}dppx)`).addEventListener('change', updatePixelRatio, { once: true });\n\t\t\tsetPixelRatio(pr);\n\t\t};\n\n\t\tupdatePixelRatio();\n\t}, []);\n\n\treturn (\n\t\t<Canvas\n\t\t\tstyle={{ width: '50vh', height: '50vh', userSelect: 'none' }}\n\t\t\tdpr={pixelRatio * 4}\n\t\t\tflat\n\t\t\tonCreated={({ gl }) => {\n\t\t\t\tgl.antialias = true;\n\t\t\t}}\n\t\t\tcamera={{ fov: 30 }}\n\t\t>\n\t\t\t{data.map((element, idx) => {\n\t\t\t\treturn (\n\t\t\t\t\t<CircularSector\n\t\t\t\t\t\tkey={`CircularSector${idx}`}\n\t\t\t\t\t\tidx={idx}\n\t\t\t\t\t\tradius={mainCircleRadius}\n\t\t\t\t\t\tgrade={element.grade}\n\t\t\t\t\t\tcolor={element.color}\n\t\t\t\t\t\tdataLen={data.length}\n\t\t\t\t\t\tmaxGrade={maxGrade}\n\t\t\t\t\t\tcategory={element.category}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t})}\n\t\t</Canvas>\n\t);\n};\n\nexport default CircleCanvas;\n","import './App.css';\nimport CircleCanvas from 'containers/CircleCanvas';\n\nconst data = [\n\t{\n\t\tcategory: 'Carrer',\n\t\tgrade: '5',\n\t\tcolor: '#59F316'\n\t},\n\t{\n\t\tcategory: 'Environment',\n\t\tgrade: '8',\n\t\tcolor: '#EF767A'\n\t},\n\t{\n\t\tcategory: 'Life Purpose',\n\t\tgrade: '7',\n\t\tcolor: '#7D7ABC'\n\t},\n\t{\n\t\tcategory: 'Nutrition',\n\t\tgrade: '4',\n\t\tcolor: '#3a86ff'\n\t},\n\t{\n\t\tcategory: 'Self Esteem',\n\t\tgrade: '1',\n\t\tcolor: '#FFE347'\n\t}\n];\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<h1>Wheel of life</h1>\n\t\t\t<div className=\"CircleCanvasDiv\">\n\t\t\t\t<CircleCanvas data={data} />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}